#!/bin/csh -f
alias clang++='clang++-3.5 -std=c++11'
@ a = 5002
@ init = $a 
@ k = 300
@ rsr = 10              # number of spheres divided by number of rods 
@ nrrodeq = 122880
while ( $a < 5003 )
	mkdir $a
	cd $a
	@ ifcreate = 1; 
	sed "s/xxx/$a/; s/xxxnew/$a/ ; s/xxclustering/step<-1/ ; s/xxnstep/step<=1000/ ; s/xxcreate/$ifcreate/ ; s/xxrestart/0/ ; s/xxthermo/0/ ; s/xxcluster_restart/0/ ; s/xx_rotation/1/ " ../../BD_3D_rigid_rotation_optimized.cpp > BD_3D_rigid_rotation_optimized.cpp
	sed "s/xxshift/1/ ; s/xxclustering/0/ " ../../pairforce_rod.h > pairforce_rod.h

	@ cubic = 1
       
    set ar = `echo "scale=3 ; $k/10 " |bc -l`
    set nrrods = `echo "scale=3 ; $nrrodeq/$ar " | bc -l`
	
	set box_Lx=`echo "scale=3 ; e(l($nrrodeq*(($ar+$rsr-1)/($ar*$rsr))*(4/3)*3.142*(0.5^3)/(($init-$init)*0.001+0.001))/(3))" | bc -l`
	echo $box_Lx
	if ($cubic) then
	
	set box_Ly = $box_Lx ;
	set box_Lz = $box_Lx ;
	
	endif
	 
    sed "s/xxNrParticles/$nrrods/ ; s/box_Lx/$box_Lx/ ; s/box_Ly/$box_Ly/ ; s/box_Lz/$box_Lz/ ;  s/xxaspect_ratio/$ar/ ;  s/xxrodsphere_ratio/$rsr/ " ../../defs.h > defs.h
  
    cp ../../rigid_force.h .
    cp ../../structure_definitions.h .
    cp ../../rigid_force.cpp .
    cp ../../vctr3D.h .
    cp ../../vctr4D.h .

    if ( $ifcreate == 1 ) then
		rm -f log
    endif

    g++ -std=c++11 BD_3D_rigid_rotation_optimized.cpp rigid_force.cpp -O3 -o ${a}_BD_3D_rigid_rotation_optimized.out
    ./${a}_BD_3D_rigid_rotation_optimized.out >>& log -a &
    echo $k
    @ k = $k + 20    
    cd ..
    echo $a
    @ a = $a + 2
    echo $a
end
wait
@ a = 5002
@ init = $a 
@ k = 300
while ( $a < 5003 )
  cd $a
  @ ifcreate = 0; 
  sed "s/xxx/$a/ ; s/xxxnew/$a/ ; s/xxclustering/step>1000/ ; s/xxnstep/step<=100000000/ ; s/xxcreate/0/ ; s/xxrestart/1/ ; s/xxthermo/step<1000/ ; s/xxcluster_restart/0/ ; s/xx_rotation/1/" ../../BD_3D_rigid_rotation_optimized.cpp > BD_3D_rigid_rotation_optimized.cpp
  sed "s/xxshift/0/ ; s/xxclustering/1/ ; s/xxaspect_ratio/$ar/" ../../pairforce_rod.h > pairforce_rod.h
 
 	@ cubic = 1

    set ar = `echo "scale=3 ; $k/10 " |bc -l`
    set nrrods = `echo "scale=3 ; $nrrodeq/$ar " | bc -l`

	set box_Lx=`echo "scale=3 ; e(l($nrrodeq*(($ar+$rsr-1)/($ar*$rsr))*(4/3)*3.142*(0.5^3)/(($init-$init)*0.001+0.001))/(3))" | bc -l`

	echo $box_Lx
	if ($cubic) then
	
	set box_Ly = $box_Lx ;
	set box_Lz = $box_Lx ;
	
	endif
   
  sed "s/xxNrParticles/$nrrods/ ; s/box_Lx/$box_Lx/ ; s/box_Ly/$box_Ly/ ; s/box_Lz/$box_Lz/ ; s/xxaspect_ratio/$ar/ ;  s/xxrodsphere_ratio/$rsr/  " ../../defs.h > defs.h

  cp ../../rigid_force.h .
  cp ../../structure_definitions.h .
  cp ../../rigid_force.cpp .
  cp ../../vctr3D.h .
  cp ../../vctr4D.h .
  
  if ( $ifcreate == 1 ) then
		rm -f log
  endif
  
  icpc -std=c++11 BD_3D_rigid_rotation_optimized.cpp rigid_force.cpp -O3 -o ${a}_BD_3D_rigid_rotation_optimized.out

    ./${a}_BD_3D_rigid_rotation_optimized.out >>& log -a &

  @ k = $k + 20    
  cd ..
  @ a = $a + 2 
end

